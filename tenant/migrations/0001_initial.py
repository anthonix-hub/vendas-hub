# Generated by Django 3.2.19 on 2024-12-18 16:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('email', models.CharField(max_length=300)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('free_plan', 'Free Plan'), ('basic_plan', 'Basic Plan'), ('standard_plan', 'Standard Plan'), ('premium_plan', 'Premium Plan')], help_text='The name of the subscription plan.', max_length=20, unique=True)),
                ('description', models.TextField(blank=True, help_text='A brief description of the plan.', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='The price of the subscription plan.', max_digits=10)),
                ('duration', models.PositiveIntegerField(help_text='Duration of the subscription plan in days.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('schema_name', models.CharField(max_length=63, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='uploads/')),
                ('processed_image', models.ImageField(blank=True, null=True, upload_to='processed/')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Start date of the subscription.')),
                ('end_date', models.DateTimeField(blank=True, help_text='End date of the subscription. Calculated based on start date and plan duration.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the subscription is currently active.')),
                ('auto_renew', models.BooleanField(default=False, help_text='Whether the subscription will automatically renew after expiration.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the subscription was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the subscription was last updated.')),
                ('plan', models.ForeignKey(help_text='The subscription plan selected by the tenant.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='tenant.subscriptionplan')),
                ('tenant', models.OneToOneField(help_text='The tenant this subscription belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='tenant.tenant')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=400)),
                ('city', models.CharField(max_length=400)),
                ('state', models.CharField(max_length=400)),
                ('country', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=400)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenant.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('price', models.FloatField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('digital', models.BooleanField(blank=True, default=False, null=True)),
                ('description', models.TextField(blank=True, max_length=250)),
                ('stock', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='tenant.tenant')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_date', models.DateTimeField(auto_now_add=True)),
                ('received', models.BooleanField(default=False)),
                ('received_date', models.DateTimeField(blank=True, null=True)),
                ('shipped', models.BooleanField(default=False)),
                ('payment_made', models.BooleanField(default=False)),
                ('complete', models.BooleanField(default=False)),
                ('Customers_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenant.shippingaddress')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='tenant.customer')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='tenant.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='tenant.orders')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenant.product')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='tenant.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='tenant.tenant'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_made', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenant.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenant.customer')),
            ],
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(fields=('email', 'tenant'), name='unique_customer_email_per_tenant'),
        ),
    ]
